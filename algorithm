import sys, collections
input = sys.stdin.readline
print = sys.stdout.write

t = int(input())

for _ in range(t):
    n, k = map(int, input().split())
    d = [0] * (n+1)
    cost = [0] * (n+1)
    ind = [0] * (n+1)
    v = [[] for _ in range(n+1)]
    c = list(map(int, input().split()))

    for i in range(1, n+1):
        cost[i] = c[i-1]

    for _ in range(k):
        a, b = map(int, input().split())
        v[a].append(b)
        ind[b] += 1

    end_node = int(input())

    q = collections.deque()
    for i in range(1, n+1):
        if ind[i] == 0:
            q.append(i)
            d[i] = cost[i]

    while q:
        node = q.popleft()

        for i in v[node]:
            ind[i] -= 1
            d[i] = max(d[i], cost[i] + d[node])
            if ind[i] == 0:
                q.append(i)


    print("%d\n" % d[end_node])