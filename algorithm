import sys
input = sys.stdin.readline
print = sys.stdout.write
from heapq import heappush, heappop


m, n = map(int, input().split())

d = [[2147483647 for _ in range(m+1)] for _ in range(n+1)]
a = [[0 for _ in range(m+1)] for _ in range(n+1)]
dx = [0, 0, 1, -1]
dy = [-1, 1, 0, 0]

for i in range(n):
    word = input()
    for j in range(m):
        a[i][j] = int(word[j])

pq = []
d[0][0] = 0
heappush(pq, (d[0][0], 0, 0))

while pq:
    cost, x, y = heappop(pq)

    for i in range(4):
        nx = x + dx[i]
        ny = y + dy[i]

        if nx>=0 and nx<n and ny>=0 and ny<m:

            n_cost = 0
            if a[nx][ny] == 1: n_cost = 1

            if d[nx][ny] > d[x][y] + n_cost:
                d[nx][ny] = d[x][y] + n_cost
                heappush(pq, (d[nx][ny], nx, ny))


print("%d\n" % d[n-1][m-1])
