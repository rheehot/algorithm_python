import sys
input = sys.stdin.readline
print = sys.stdout.write
from heapq import heappush, heappop

max_val = 2147483647

n = int(input())
m = int(input())

v = [[] for _ in range(n+1)]
dist = [max_val] * (n+1)

for _ in range(m):
    a, b, c = map(int, input().split())
    v[a].append((c, b))

start_node, end_node = map(int, input().split())

pq = []
dist[start_node] = 0
heappush(pq, (dist[start_node], start_node))

while pq:
    cur_cost, cur_node = heappop(pq)

    for next_cost, next_node in v[cur_node]:
        if dist[next_node] > dist[cur_node] + next_cost:
            dist[next_node] = dist[cur_node] + next_cost
            heappush(pq, (dist[next_node], next_node))

print("%d\n" % dist[end_node])