import sys, collections
input = sys.stdin.readline
print = sys.stdout.write


def bfs(x, y):
    q = collections.deque()
    q.append((x, y))
    check[x][y] = 1

    while q:
        x, y = q.popleft()

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx>=0 and nx<n and ny>=0 and ny<m:
                if check[nx][ny] == 0 and d[nx][ny] == 0:
                    check[nx][ny] = check[x][y] + 1
                    q.append((nx, ny))


n, m = map(int, input().split())

d = [[0 for _ in range(m)] for _ in range(n)]
a = [[0 for _ in range(m)] for _ in range(n)]
b = [[0 for _ in range(m)] for _ in range(n)]
max_val = 2147483647
result = max_val
cnt = 0
dx = [0, 0, 1, -1]
dy = [-1, 1, 0, 0]


for i in range(n):
    mp = input()
    for j in range(m):
        d[i][j] = int(mp[j])

p = []
for _ in range(3):
    x, y = map(int, input().split())
    p.append((x-1, y-1))

for x, y in p:
    check = [[0 for _ in range(m)] for _ in range(n)]

    bfs(x, y)

    for i in range(n):
        for j in range(m):

            if d[i][j] == 0 and check[i][j] != 0:
                a[i][j] = max(a[i][j], check[i][j])
                b[i][j] += 1

    for i in range(n):
        for j in range(m):

            if d[i][j] == 0 and b[i][j] == 3 and a[i][j] < result:
                cnt = 1
                result = a[i][j]
            elif a[i][j] == result:
                cnt += 1


if result == max_val:
    print("-1\n")
else:
    print("%d\n" % (result-1))
    print("%d\n" % cnt)




