import sys, heapq
input = sys.stdin.readline
print = sys.stdout.write

max_val = int(1e6)
n, m = map(int, input().split())
v = [[] for _ in range(n+1)]
d = [max_val] * (n+1)

start_node = int(input())

for _ in range(m):
    a, b, c = map(int, input().split())
    v[a].append((c, b))

d[start_node] = 0
pq = []
heapq.heappush(pq, (d[start_node], start_node))

while pq:

    c_cost, cur = heapq.heappop(pq)

    for n_cost, next in v[cur]:
        if d[next] > d[cur] + n_cost:
            d[next] = d[cur] + n_cost
            heapq.heappush(pq, (d[next], next))

for i in range(1, n+1):
    if d[i] == max_val:
        print("INF\n")
    else:
        print("%d\n" % d[i])
