#시간 복잡도: O(V+E)
#공간 복잡도: O(E)
#사용한 알고리즘: BFS, DFS, sort
#사용한 자료구조: 간선 리스트

from collections import deque


def dfs(node):
    print(node, end=" ")
    check[node] = True

    for i in v[node]:
        if not check[i]:
            dfs(i)


def bfs(start):
    check[start] = True
    q = deque()
    q.append(start)

    while q:
        node = q.popleft()
        print(node, end=" ")

        for i in v[node]:
            if not check[i]:
                check[i] = True
                q.append(i)


n, m, start_node = map(int, input().split())

v = [[] for _ in range(n+1)]

for _ in range(m):
    a, b = map(int, input().split())
    v[a].append(b)
    v[b].append(a)


for i in range(1, n+1):
    v[i].sort()

check = [False]*(n+1)


dfs(start_node)
print()

check = [False] * (n+1)

bfs(start_node)
print()




