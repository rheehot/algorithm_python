# import sys
# input = sys.stdin.readline
# print = sys.stdout.write
from heapq import heappush, heappop

t = int(input())
for test_case in range(1, t+1):
    n, m, start_node, end_node = map(int, input().split())
    v = [[] for _ in range(n+1)]
    for _ in range(m):
        a, b, c = map(int, input().split())
        v[a].append((c, b))
        v[b].append((c, a))

    pq = []
    d = [100000000001] * (n+1)
    d[start_node] = 0
    heappush(pq, (d[start_node], start_node))

    while pq:
        c_cost, c_node = heappop(pq)

        for n_cost, n_node in v[c_node]:
            if d[n_node] > d[c_node] + n_cost:
                d[n_node] = d[c_node] + n_cost
                heappush(pq, (d[n_node], n_node))

    print("#%d %ld" % (test_case, d[end_node]))
