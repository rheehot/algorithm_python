import sys
input = sys.stdin.readline
print = sys.stdout.write

from heapq import heappush, heappop

n = int(input())
v = [[] for _ in range(n+1)]
ind = [0] * (n+1)
cost = [0] * (n+1)
d = [0] * (n+1)

for i in range(1, n+1):
    arr = list(map(int, input().split()))
    cost[i] = arr[0]

    for j in range(1, len(arr) - 1):
        v[arr[j]].append(i)
        ind[i] += 1

pq = []
for i in range(1, n+1):
    if ind[i] == 0:
        heappush(pq, i)
        d[i] = cost[i]

while pq:
    node = heappop(pq)

    for next in v[node]:
        ind[next] -= 1

        d[next] = max(d[next], d[node] + cost[next])

        if ind[next] == 0:
            heappush(pq, next)

for i in range(1, n+1):
    print("%d\n" % d[i])