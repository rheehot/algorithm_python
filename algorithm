#시간 복잡도: O(tnm)
#공간 복잡도: O(n)
#사용한 알고리즘: 벨만포드 알고리즘
#사용한 자료구조: 리스트


import sys
input = sys.stdin.readline
print = sys.stdout.write

max_val = 2147483647
t = int(input())

for _ in range(t):
    n, m, w = map(int, input().split())
    dist = [max_val] * (n+1)
    v = []
    for _ in range(m):
        a, b, c = map(int, input().split())
        v.append((a, b, c))
        v.append((b, a, c))

    for _ in range(w):
        a, b, c = map(int, input().split())
        v.append((a, b, -c))

    dist[1] = True
    negative_cycle = False
    for i in range(1, n+1):
        for cur, next, cost in v:

            if dist[cur] != max_val and dist[next] > dist[cur] + cost:
                dist[next] = dist[cur] + cost
                if i == n : negative_cycle = True

    if negative_cycle: print("YES\n")
    else: print("NO\n")