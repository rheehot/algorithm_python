import sys, collections
input = sys.stdin.readline
print = sys.stdout.write

sys.setrecursionlimit(10 ** 6)


def dfs(node):
    check[node] = True
    print("%d " % node)

    for i in v[node]:
        if not check[i]:
            dfs(i)


def bfs(start):
    check[start] = True
    q = collections.deque()
    q.append(start)

    while q:
        node = q.popleft()
        print("%d " % node)

        for i in v[node]:
            if not check[i]:
                check[i] = True
                q.append(i)


n, m, start_node = map(int, input().split())
v = [[] for _ in range(n+1)]


for _ in range(m):
    a, b = map(int, input().split())
    v[a].append(b)
    v[b].append(a)


for i in v:
    i.sort()


check = [False] * (n+1)

dfs(start_node)
print("\n")

check = [False] * (n+1)

bfs(start_node)
print("\n")